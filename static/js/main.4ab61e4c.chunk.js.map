{"version":3,"sources":["components/Counter.jsx","components/CounterList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","props","number","increaseNumber","id","deleteCounter","useState","cn","setCn","useEffect","className","onClick","CounterList","counters","createCounter","map","counter","value","App","setCounters","counterCount","setCounterCount","increment","newCounters","_i","length","push","splice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAkCeA,EA9BC,SAACC,GACf,IAAQC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,eAAgBC,EAAsBH,EAAtBG,GAAIC,EAAkBJ,EAAlBI,cAEpC,EAAoBC,mBAAS,IAA7B,mBAAOC,EAAP,KAAWC,EAAX,KAeA,OAbAC,qBAAU,WAEND,EADY,IAAXN,EACK,GAEAA,EAAS,EACT,WAGA,eAGP,CAACA,IAGF,cAAC,WAAD,UACE,sBAAKQ,UAAU,UAAf,UACE,sBAAKA,UAAWH,EAAhB,qBAA6BL,KAC7B,wBAAQS,QAAS,kBAAMR,EAAe,EAAGC,IAAzC,6BACA,wBAAQO,QAAS,kBAAMR,GAAgB,EAAGC,IAA1C,6BACA,wBAAQM,UAAU,SAASC,QAAS,kBAAMN,EAAcD,IAAxD,kCCROQ,EAhBK,SAACX,GACnB,IAAQY,EAA2DZ,EAA3DY,SAAUV,EAAiDF,EAAjDE,eAAgBW,EAAiCb,EAAjCa,cAAeT,EAAkBJ,EAAlBI,cAEjD,OACE,cAAC,WAAD,UACE,sBAAKK,UAAU,YAAf,UACGG,EAASE,KAAI,SAAAC,GAAO,OACjB,cAAC,EAAD,CAASd,OAAQc,EAAQC,MAAOb,GAAIY,EAAQZ,GAAID,eAAgBA,EAAgBE,cAAeA,GAAoBW,EAAQZ,OAE/H,wBAAQM,UAAU,SAASC,QAASG,EAApC,iCC6BOI,EAtCH,WACV,MAAgCZ,mBAAS,CAAC,CAACW,MAAO,EAAGb,GAAI,GAAI,CAACa,MAAO,GAAIb,GAAI,KAA7E,mBAAOS,EAAP,KAAiBM,EAAjB,KACA,EAAwCb,mBAAS,GAAjD,mBAAOc,EAAP,KAAqBC,EAArB,KA6BA,OACE,cAAC,WAAD,UACE,cAAC,EAAD,CAAaR,SAAUA,EAAUV,eA7Bd,SAACmB,EAAWlB,GAEjC,IADA,IAAImB,EAAW,YAAOV,GACdW,EAAK,EAAGA,EAAKX,EAASY,OAAQD,IACjCX,EAASW,GAAIpB,KAAOA,IACrBmB,EAAYC,GAAIP,OAASK,GAG7BH,EAAYI,IAsBuDT,cAnB/C,WACpB,IAAIS,EAAW,YAAOV,GACtBU,EAAYG,KAAK,CAACT,MAAO,EAAGb,GAAIgB,IAChCC,EAAgBD,EAAe,GAC/BD,EAAYI,IAeqFlB,cAZ7E,SAACD,GAErB,IADA,IAAImB,EAAW,YAAOV,GACdW,EAAK,EAAGA,EAAKX,EAASY,OAAQD,IACjCX,EAASW,GAAIpB,KAAOA,GACrBmB,EAAYI,OAAOH,EAAI,GAG3BL,EAAYI,SCpBDK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4ab61e4c.chunk.js","sourcesContent":["import { Fragment, useState, useEffect } from 'react';\r\n\r\nimport './Counter.css';\r\n\r\nconst Counter = (props) => {\r\n  const { number, increaseNumber, id, deleteCounter } = props;\r\n\r\n  const [cn, setCn] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if(number === 0) {\r\n      setCn(\"\");\r\n    }\r\n    else if(number > 0) {\r\n      setCn(\"text-red\");\r\n    }\r\n    else {\r\n      setCn(\"text-blue\");\r\n    }\r\n\r\n  }, [number]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"counter\">\r\n        <div className={cn}>Number: {number}</div>\r\n        <button onClick={() => increaseNumber(1, id)}>Increase number</button>\r\n        <button onClick={() => increaseNumber(-1, id)}>Decrease number</button>\r\n        <button className=\"remove\" onClick={() => deleteCounter(id)}>Delete counter</button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Counter;","import { Fragment } from 'react';\r\n\r\nimport Counter from './Counter';\r\n\r\nconst CounterList = (props) => {\r\n  const { counters, increaseNumber, createCounter, deleteCounter } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"container\">\r\n        {counters.map(counter => (\r\n            <Counter number={counter.value} id={counter.id} increaseNumber={increaseNumber} deleteCounter={deleteCounter} key={counter.id} />\r\n        ))}\r\n        <button className=\"create\" onClick={createCounter}>Create button</button>\r\n\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CounterList;","import { Fragment, useState } from 'react';\n\nimport CounterList from './components/CounterList';\n\nconst App = () => {\n  const [counters, setCounters] = useState([{value: 0, id: 0}, {value: 10, id: 1}]);\n  const [counterCount, setCounterCount] = useState(2);\n\n  const increaseNumber = (increment, id) => {\n    let newCounters = [...counters];\n    for(let _i = 0; _i < counters.length; _i ++) {\n      if(counters[_i].id === id) {\n        newCounters[_i].value += increment;\n      }\n    }\n    setCounters(newCounters);\n  };\n\n  const createCounter = () => {\n    let newCounters = [...counters];\n    newCounters.push({value: 0, id: counterCount});\n    setCounterCount(counterCount + 1);\n    setCounters(newCounters);\n  }\n\n  const deleteCounter = (id) => {\n    let newCounters = [...counters];\n    for(let _i = 0; _i < counters.length; _i ++) {\n      if(counters[_i].id === id) {\n        newCounters.splice(_i, 1);\n      }\n    }\n    setCounters(newCounters);\n  }\n\n  return (\n    <Fragment>\n      <CounterList counters={counters} increaseNumber={increaseNumber} createCounter={createCounter} deleteCounter={deleteCounter} />\n    </Fragment>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}